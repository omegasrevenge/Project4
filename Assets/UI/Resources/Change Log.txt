Daikon Forge GUI v1.0.13 Changelog

NOTICE: The DFGUI folder structure has changed. If upgrading, you will need to delete the existing [Assets/Daikon Forge] folder before importing this new version.

* Editor Scene not automatically marked as "unsaved" when nothing has changed
* Can now drag container controls in Editor when mouse is over child control on start of drag operation
* Resolved Editor crash during Editor startup when loaded project contains top-level prefabs with certain conditions
* dfDropdown and dfListbox now localize item data
* Added event proxy to dfEventBinding component to allow use of standard .NET events based on System.EventHandler signature
* Added BeforeMenuOpen event to dfRadialMenu - Convenient hook to hide/show/enable menu items before menu is shown
* Added dfListbox.AddItem() method to allow adding items at runtime (useful for Playmaker integration, etc)
* Can now triple-click textbox to select all text
* Textbox, Button, Label, DropdownList, and Listbox inspectors now always shows font size (internally sets TextScale property to matching calculated value)
* Fixed how dfDynamicFont.MeasureString() measures the width of spaces
* dfTextbox control now uses background sprite padding to determine top and bottom of selection rect instead of text padding
* dfTextbox control no longer throws NullReferenceException when assigning NULL value to Text property (sets Text to empty string)
* dfAnimatedValue and descendants now report IsDone = true only after timeout is elapsed *and* final value has been queried
* Prefabs moved in the Editor with the Move gizmo now correctly retain their positions on app startup
* Resolved Editor crash when assigning a control component to a GameObject that already has a control component assigned (this was never a valid operation, but doesn't crash now)
* Resolved rare edge case with RequireComponent attribute usage that could result in Unity Editor crashing
* dfWebSprite now exposes AutoDownload property and LoadImage() method, can now download new images "on demand"
* Expression binding is deprecated, and may be removed from future versions (If so, will be open-sourced at that point)
* Added a warning to dfExpressionPropertyBinding about that component not passing Windows Store certification (3rd party API)
* Fixed fill sprite handling on Right To Left and Vertical sliders
* Modified the dfTweenEventBinding class to compile and work on iOS, Windows Store, and Windows Phone
* Added BackgroundColor property to Panel, can now set panel background opacity independently of panel opacity
* Modified script folder structure (see notice above)
* Touch now works properly and consistently on Windows 8 mobile devices
* Support for Windows Store and Windows Phone 8 platforms
* Refactored touch processing code to allow addition of third-party touch sources (such as TUIO, Windows 7, Windows 8 Standalone, etc)
* Added components that provide support for simple gestures (Tap, Hold, Flick, Pan)
* Texture sprite now uses Texture instead of Texture2D, supports render textures and movie texture
* Resolved an issue with using multiple dfInputManager instances that could cause controls to lose focus unexpectedly
* Minor improvements to memory usage and performance with message-style event handling code
* Can now use message-style event handling for SizeChanged event 
* Minor improvements to text rendering performance
* Added StartDelay property for tweens
* dfControl.GetScreenRect() now returns encompassing rect for rotated controls
* dfPanelFlowLayout now includes support for excluding controls from layout
* dfPanelFlowLayout now allows controls to reach to exact viewport extents before wrapping

